From ac9c6cf033c3776b054ac3e6a2c95d6786fd8cea Mon Sep 17 00:00:00 2001
From: Yann Collette <yann.collette@artelys.com>
Date: Mon, 2 Dec 2019 16:00:48 +0100
Subject: [PATCH] manage home dir for conf file

---
 src/projectM-sdl/projectM_SDL_main.cpp | 64 +++++++++++++++++---------
 1 file changed, 43 insertions(+), 21 deletions(-)

diff --git a/src/projectM-sdl/projectM_SDL_main.cpp b/src/projectM-sdl/projectM_SDL_main.cpp
index 754bc14d..3b67894e 100644
--- a/src/projectM-sdl/projectM_SDL_main.cpp
+++ b/src/projectM-sdl/projectM_SDL_main.cpp
@@ -31,6 +31,10 @@
 *
 */
 
+#include <fstream>
+#include <iostream>
+#include <string>
+
 #include "pmSDL.hpp"
 
 #if OGL_DEBUG
@@ -54,30 +58,48 @@ void DebugLog(GLenum source,
 
 // return path to config file to use
 std::string getConfigFilePath(std::string datadir_path) {
-    struct stat sb;
-    const char *path = datadir_path.c_str();
-    
-    SDL_LogInfo(SDL_LOG_CATEGORY_APPLICATION, "Looking for configuration file in data dir: %s.\n", path);
-    
-    // check if datadir exists.
-    // it should exist if this application was installed. if not, assume we're developing it and use currect directory
-    if (stat(path, &sb) != 0) {
-        SDL_LogWarn(SDL_LOG_CATEGORY_ERROR, "Could not open datadir path %s\n", path);
-    }
+  char* home = NULL;
+  std::string projectM_home;
+  std::string projectM_config = DATADIR_PATH;
+
+  projectM_config = datadir_path;
+  
+  home=getenv("HOME");
+  
+  projectM_home = std::string(home);
+  projectM_home += "/.projectM";
+  
+  // Create the ~/.projectM directory. If it already exists, mkdir will do nothing
+  mkdir(projectM_home.c_str(), 0755);
+
+  projectM_home += "/config.inp";
+  projectM_config += "/config.inp";
+  
+  std::ifstream f_home(projectM_home);
+  std::ifstream f_config(projectM_config);
     
-    std::string configFilePath = path;
-    configFilePath += "/config.inp";
-    
-    // check if config file exists
-    if (stat(configFilePath.c_str(), &sb) != 0) {
-        SDL_LogWarn(SDL_LOG_CATEGORY_ERROR, "No config file %s found. Using development settings.\n", configFilePath.c_str());
-        return "";
-    }
-    
-    return configFilePath;
+  if (f_config.good() && !f_home.good()) {
+    std::ifstream f_src;
+    std::ofstream f_dst;
+      
+    f_src.open(projectM_config, std::ios::in  | std::ios::binary);
+    f_dst.open(projectM_home,   std::ios::out | std::ios::binary);
+    f_dst << f_src.rdbuf();
+    f_dst.close();
+    f_src.close();
+    return std::string(projectM_home);
+  } else if (f_home.good()) {
+    SDL_LogInfo(SDL_LOG_CATEGORY_APPLICATION, "created ~/.projectM/config.inp successfully\n");
+    return std::string(projectM_home);
+  } else if (f_config.good()) {
+    SDL_LogWarn(SDL_LOG_CATEGORY_APPLICATION, "Cannot create ~/.projectM/config.inp, using default config file\n");
+    return std::string(projectM_config);
+  } else {
+    SDL_LogWarn(SDL_LOG_CATEGORY_ERROR, "Using implementation defaults, your system is really messed up, I'm suprised we even got this far\n");
+    abort();
+  }
 }
 
-
 // ref https://blogs.msdn.microsoft.com/matthew_van_eerde/2008/12/16/sample-wasapi-loopback-capture-record-what-you-hear/
 #ifdef WASAPI_LOOPBACK
 
-- 
2.23.0

